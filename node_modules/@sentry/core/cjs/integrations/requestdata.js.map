{"version":3,"file":"requestdata.js","sources":["../../../src/integrations/requestdata.ts"],"sourcesContent":["import type { Client, Event, EventProcessor, Hub, Integration, PolymorphicRequest, Transaction } from '@sentry/types';\nimport type { AddRequestDataToEventOptions, TransactionNamingScheme } from '@sentry/utils';\nimport { addRequestDataToEvent, extractPathForTransaction } from '@sentry/utils';\n\nexport type RequestDataIntegrationOptions = {\n  /**\n   * Controls what data is pulled from the request and added to the event\n   */\n  include?: {\n    cookies?: boolean;\n    data?: boolean;\n    headers?: boolean;\n    ip?: boolean;\n    query_string?: boolean;\n    url?: boolean;\n    user?:\n      | boolean\n      | {\n          id?: boolean;\n          username?: boolean;\n          email?: boolean;\n        };\n  };\n\n  /** Whether to identify transactions by parameterized path, parameterized path with method, or handler name */\n  transactionNamingScheme?: TransactionNamingScheme;\n};\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\n/** Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`. */\nexport class RequestData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RequestData';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Function for adding request data to event. Defaults to `addRequestDataToEvent` from `@sentry/node` for now, but\n   * left as a property so this integration can be moved to `@sentry/core` as a base class in case we decide to use\n   * something similar in browser-based SDKs in the future.\n   */\n  protected _addRequestData: (event: Event, req: PolymorphicRequest, options?: { [key: string]: unknown }) => Event;\n\n  private _options: Required<RequestDataIntegrationOptions>;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: RequestDataIntegrationOptions = {}) {\n    this.name = RequestData.id;\n    this._addRequestData = addRequestDataToEvent;\n    this._options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      include: {\n        // @ts-expect-error It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n        // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n        method: true,\n        ...DEFAULT_OPTIONS.include,\n        ...options.include,\n        user:\n          options.include && typeof options.include.user === 'boolean'\n            ? options.include.user\n            : {\n                ...DEFAULT_OPTIONS.include.user,\n                // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n                ...((options.include || {}).user as Record<string, boolean>),\n              },\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(\n    _addGlobalEventProcessor: (eventProcessor: EventProcessor) => void,\n    _getCurrentHub: () => Hub,\n  ): void {\n    // noop\n  }\n\n  /** @inheritdoc */\n  public processEvent(event: Event, _hint: unknown, client: Client): Event {\n    // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n    // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n    // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n    // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n    const { transactionNamingScheme } = this._options;\n\n    const { sdkProcessingMetadata = {} } = event;\n    const req = sdkProcessingMetadata.request;\n\n    if (!req) {\n      return event;\n    }\n\n    // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n    // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n    // integration, so that all of this passing and conversion isn't necessary\n    const addRequestDataOptions =\n      sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n      sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n      convertReqDataIntegrationOptsToAddReqDataOpts(this._options);\n\n    const processedEvent = this._addRequestData(event, req, addRequestDataOptions);\n\n    // Transaction events already have the right `transaction` value\n    if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n      return processedEvent;\n    }\n\n    // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n    // value with a high-quality one\n    const reqWithTransaction = req as { _sentryTransaction?: Transaction };\n    const transaction = reqWithTransaction._sentryTransaction;\n    if (transaction) {\n      // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n      // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n      // to break things like alert rules.)\n      const shouldIncludeMethodInTransactionName =\n        getSDKName(client) === 'sentry.javascript.nextjs'\n          ? transaction.name.startsWith('/api')\n          : transactionNamingScheme !== 'path';\n\n      const [transactionValue] = extractPathForTransaction(req, {\n        path: true,\n        method: shouldIncludeMethodInTransactionName,\n        customRoute: transaction.name,\n      });\n\n      processedEvent.transaction = transactionValue;\n    }\n\n    return processedEvent;\n  }\n}\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions: Required<RequestDataIntegrationOptions>,\n): AddRequestDataToEventOptions {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys: string[] = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys: string[] = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(client: Client): string | undefined {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return client.getOptions()._metadata!.sdk!.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n"],"names":["addRequestDataToEvent","extractPathForTransaction"],"mappings":"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"}